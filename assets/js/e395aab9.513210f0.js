"use strict";(self.webpackChunkcodeframe_docs=self.webpackChunkcodeframe_docs||[]).push([[3216],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var r=n(96540);const l={},c=r.createContext(l);function i(e){const s=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(c.Provider,{value:s},e.children)}},69706:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"language-references/asm/asm","title":"ASM","description":"---","source":"@site/docs/language-references/asm/asm.md","sourceDirName":"language-references/asm","slug":"/language-references/asm/","permalink":"/docs/language-references/asm/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language-references/asm/asm.md","tags":[],"version":"current","frontMatter":{"title":"ASM"},"sidebar":"tutorialSidebar","previous":{"title":"<stdarg.h>","permalink":"/docs/language-references/c/misc/stdarg"},"next":{"title":"registers","permalink":"/docs/language-references/asm/registers"}}');var l=n(74848),c=n(28453);const i={title:"ASM"},d=void 0,o={},t=[{value:"The 5 things assembly is made of",id:"the-5-things-assembly-is-made-of",level:2},{value:"Learn these 12 mnemonics first (ignore the rest)",id:"learn-these-12-mnemonics-first-ignore-the-rest",level:2},{value:"The registers you actually need at start",id:"the-registers-you-actually-need-at-start",level:2},{value:"General-purpose (64/32/16/8-bit views)",id:"general-purpose-6432168-bit-views",level:3},{value:"Flags you\u2019ll see from <code>cmp</code>/ALU",id:"flags-youll-see-from-cmpalu",level:3},{value:"Two calling conventions (pick one target)",id:"two-calling-conventions-pick-one-target",level:2},{value:"Windows x64 (MS ABI)",id:"windows-x64-ms-abi",level:3},{value:"System V (Linux/macOS)",id:"system-v-linuxmacos",level:3},{value:"Memory operand pattern (Intel)",id:"memory-operand-pattern-intel",level:2}];function a(e){const s={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"the-5-things-assembly-is-made-of",children:"The 5 things assembly is made of"}),"\n",(0,l.jsxs)(s.ol,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Mnemonic"})," \u2014 the verb: ",(0,l.jsx)(s.code,{children:"mov"}),", ",(0,l.jsx)(s.code,{children:"add"}),", ",(0,l.jsx)(s.code,{children:"cmp"}),", ",(0,l.jsx)(s.code,{children:"jmp"}),", ",(0,l.jsx)(s.code,{children:"call"}),", ",(0,l.jsx)(s.code,{children:"ret"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Operands"})," \u2014 what it acts on: registers (",(0,l.jsx)(s.code,{children:"rax"}),"), immediates (",(0,l.jsx)(s.code,{children:"42"}),"), memory (",(0,l.jsx)(s.code,{children:"[rbp+8]"}),")"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Registers"})," \u2014 the CPU\u2019s built-in variables"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Labels"})," \u2014 names for addresses: ",(0,l.jsx)(s.code,{children:"loop:"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Directives"})," \u2014 assembler commands: ",(0,l.jsx)(s.code,{children:".text"}),", ",(0,l.jsx)(s.code,{children:".data"}),", ",(0,l.jsx)(s.code,{children:"global main"})]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"learn-these-12-mnemonics-first-ignore-the-rest",children:"Learn these 12 mnemonics first (ignore the rest)"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Data move:"})," ",(0,l.jsx)(s.code,{children:"mov"}),", ",(0,l.jsx)(s.code,{children:"lea"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Math/logic:"})," ",(0,l.jsx)(s.code,{children:"add"}),", ",(0,l.jsx)(s.code,{children:"sub"}),", ",(0,l.jsx)(s.code,{children:"and"}),", ",(0,l.jsx)(s.code,{children:"or"}),", ",(0,l.jsx)(s.code,{children:"xor"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Compare/branch:"})," ",(0,l.jsx)(s.code,{children:"cmp"}),", ",(0,l.jsx)(s.code,{children:"jmp"}),", ",(0,l.jsx)(s.code,{children:"je"}),", ",(0,l.jsx)(s.code,{children:"jne"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Calls/returns:"})," ",(0,l.jsx)(s.code,{children:"call"}),", ",(0,l.jsx)(s.code,{children:"ret"})]}),"\n"]}),"\n",(0,l.jsx)(s.p,{children:"With those you can read/write most small functions."}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"the-registers-you-actually-need-at-start",children:"The registers you actually need at start"}),"\n",(0,l.jsx)(s.h3,{id:"general-purpose-6432168-bit-views",children:"General-purpose (64/32/16/8-bit views)"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"RAX"})," (return value) \u2192 ",(0,l.jsx)(s.code,{children:"EAX/AX/AL"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"RBX"})," \u2192 ",(0,l.jsx)(s.code,{children:"EBX/BX/BL"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"RCX"})," \u2192 ",(0,l.jsx)(s.code,{children:"ECX/CX/CL"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"RDX"})," \u2192 ",(0,l.jsx)(s.code,{children:"EDX/DX/DL"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"RSI"})," \u2192 ",(0,l.jsx)(s.code,{children:"ESI/SI/SIL"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"RDI"})," \u2192 ",(0,l.jsx)(s.code,{children:"EDI/DI/DIL"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"RBP"})," (frame/base) \u2192 ",(0,l.jsx)(s.code,{children:"EBP/BP/BPL"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"RSP"})," (stack ptr) \u2192 ",(0,l.jsx)(s.code,{children:"ESP/SP/SPL"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"R8\u2013R15"})," \u2192 ",(0,l.jsx)(s.code,{children:"R8D\u2013R15D"})," \u2192 ",(0,l.jsx)(s.code,{children:"R8W\u2013R15W"})," \u2192 ",(0,l.jsx)(s.code,{children:"R8B\u2013R15B"})]}),"\n"]}),"\n",(0,l.jsxs)(s.blockquote,{children:["\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.strong,{children:"Tip:"})," avoid the legacy high bytes ",(0,l.jsx)(s.code,{children:"AH/BH/CH/DH"})," in 64-bit code."]}),"\n"]}),"\n",(0,l.jsxs)(s.h3,{id:"flags-youll-see-from-cmpalu",children:["Flags you\u2019ll see from ",(0,l.jsx)(s.code,{children:"cmp"}),"/ALU"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"ZF"})," (zero) \u2014 result was 0 \u2192 used by ",(0,l.jsx)(s.code,{children:"je"}),"/",(0,l.jsx)(s.code,{children:"jne"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"SF"})," (sign), ",(0,l.jsx)(s.code,{children:"CF"})," (carry), ",(0,l.jsx)(s.code,{children:"OF"})," (overflow) \u2014 used by signed/unsigned ",(0,l.jsx)(s.code,{children:"j*"})]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"two-calling-conventions-pick-one-target",children:"Two calling conventions (pick one target)"}),"\n",(0,l.jsx)(s.h3,{id:"windows-x64-ms-abi",children:"Windows x64 (MS ABI)"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Args:"})," ",(0,l.jsx)(s.code,{children:"RCX, RDX, R8, R9"})," (then stack)"]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Return:"})," ",(0,l.jsx)(s.code,{children:"RAX"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Caller-saved:"})," ",(0,l.jsx)(s.code,{children:"RAX, RCX, RDX, R8\u2013R11"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Callee-saved:"})," ",(0,l.jsx)(s.code,{children:"RBX, RBP, RSI, RDI, R12\u2013R15"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Stack rule:"})," before each ",(0,l.jsx)(s.code,{children:"call"}),", provide ",(0,l.jsx)(s.strong,{children:"32 bytes shadow space"})," and keep stack ",(0,l.jsx)(s.strong,{children:"16-byte aligned"})]}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"system-v-linuxmacos",children:"System V (Linux/macOS)"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Args:"})," ",(0,l.jsx)(s.code,{children:"RDI, RSI, RDX, RCX, R8, R9"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Return:"})," ",(0,l.jsx)(s.code,{children:"RAX"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Caller-saved:"})," ",(0,l.jsx)(s.code,{children:"RAX, RCX, RDX, RSI, RDI, R8\u2013R11"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Callee-saved:"})," ",(0,l.jsx)(s.code,{children:"RBX, RBP, R12\u2013R15"})]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Stack rule:"})," keep stack ",(0,l.jsx)(s.strong,{children:"16-byte aligned"})," at ",(0,l.jsx)(s.code,{children:"call"})]}),"\n"]}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"memory-operand-pattern-intel",children:"Memory operand pattern (Intel)"})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);