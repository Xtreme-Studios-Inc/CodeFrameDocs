"use strict";(self.webpackChunkcodeframe_docs=self.webpackChunkcodeframe_docs||[]).push([[6575],{511:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"config/config","title":".codeframe","description":"The main config file or rather the .codeframe file is found inside the project root directory.","source":"@site/docs/config/config.md","sourceDirName":"config","slug":"/config/","permalink":"/docs/config/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/config/config.md","tags":[],"version":"current","frontMatter":{"title":".codeframe"},"sidebar":"tutorialSidebar","previous":{"title":"schematics","permalink":"/docs/commands/schematics"},"next":{"title":"scripts","permalink":"/docs/config/scripts"}}');var s=r(4848),c=r(8453);const t={title:".codeframe"},o=void 0,d={},a=[{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The main config file or rather the ",(0,s.jsx)(n.code,{children:".codeframe"})," file is found inside the project root directory.",(0,s.jsx)(n.br,{}),"\n","This file includes the following configurations:"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"projectName"}),":",(0,s.jsx)(n.br,{}),"\n","Specify a name for your project"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"appEntry"}),":",(0,s.jsx)(n.br,{}),"\n","Relative path to the main.cpp file"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"buildDir"}),":",(0,s.jsx)(n.br,{}),"\n","Relative path to where the .exe file should be generated"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"libsDir"}),":",(0,s.jsx)(n.br,{}),"\n","Relative path to where all the libraries are dropped\nstructure has too look like the following"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"projectPreset"}),":",(0,s.jsx)(n.br,{}),"\n","Defines your project\u2019s language, toolchain, and key build settings,",(0,s.jsx)(n.br,{}),"\n","letting CodeFrame auto-configure and manage your project for you.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/config/projectPreset",children:"more details ..."})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"scripts"}),":",(0,s.jsx)(n.br,{}),"\n","Define your own command combos in the scripts configuration",(0,s.jsx)(n.br,{}),"\n","and call them with ",(0,s.jsx)(n.code,{children:"cf run <scriptName>"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/config/scripts",children:"more details ..."})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dependencies"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"type: Array<{ name: String; includeDir: String; libraryPath: String }>;\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/config/dependencies",children:"more details ..."})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"systemLibs"}),":",(0,s.jsx)(n.br,{}),"\n","To extend your project build to link to custom system libraries that are not included by default.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/config/systemLibs",children:"more details ..."})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"bundle"}),":",(0,s.jsx)(n.br,{}),"\n","Conveniently bundles everything specified in the configuration inside a bundle folder in the build directory",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/config/bundle",children:"more details ..."})]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title=".codeframe"',children:'{\n  "projectName": "appName",\n  "appEntry": "src/main.cpp",\n  "buildDir": "build",\n  "libsDir": "libs",\n  "scripts": {\n    "start": "./build/default/appName.exe",\n    "build": "codeframe build",\n    "build:release": "codeframe build -m=release",\n    "clear": "clear:build",\n    "clear:build": "rm -rf build && mkdir build"\n  },\n  "dependencies": [\n    {\n      "name": "CodeFrame",\n      "includePath": "codeframe",\n      "libPath": "codeframe",\n      "custom": true\n    }\n  ],\n  "bundle": {\n    "bundlePath": "build/bundle",\n    "resources": [\n      {\n        "from": "./build/release/appName.exe",\n        "to": "./bin/appName.exe"\n      }\n    ]\n  },\n  "document": {\n    "docsPath": "docs"\n  },\n  "projectPreset": {\n    "type": "cpp",\n    "details": {\n      "compiler": "clang",\n      "cppVersion": "c++23",\n      "cVersion": "c23"\n    }\n  },\n  "systemLibs": []\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var i=r(6540);const s={},c=i.createContext(s);function t(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);