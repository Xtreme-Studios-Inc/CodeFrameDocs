"use strict";(self.webpackChunkcodeframe_docs=self.webpackChunkcodeframe_docs||[]).push([[3692],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var o=t(96540);const a={},r=o.createContext(a);function s(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:n},e.children)}},34505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"package-manager/create","title":"Create","description":"How to structure a new package/library","source":"@site/docs/package-manager/create.md","sourceDirName":"package-manager","slug":"/package-manager/create","permalink":"/docs/package-manager/create","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/package-manager/create.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Create","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Package Manager","permalink":"/docs/category/package-manager"},"next":{"title":"Examples","permalink":"/docs/package-manager/examples"}}');var a=t(74848),r=t(28453);const s={title:"Create",sidebar_position:2},i=void 0,c={},d=[{value:"lib.json",id:"libjson",level:2}];function l(e){const n={br:"br",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"How to structure a new package/library"}),"\n",(0,a.jsx)(n.p,{children:"Library Structure"}),"\n",(0,a.jsxs)(n.p,{children:['"LibraryName/" Folder',(0,a.jsx)(n.br,{}),"\n",'"include/" Folder',(0,a.jsx)(n.br,{}),"\n",'"options/" Folder',(0,a.jsx)(n.br,{}),"\n",'"LibraryAutorDefined_Option1" Folder',(0,a.jsx)(n.br,{}),"\n",'"option_setting1" Folder',(0,a.jsx)(n.br,{}),"\n",'"option_setting2" Folder',(0,a.jsx)(n.br,{}),"\n","lib.json"]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.p,{children:"imgui\ninclude\nbackends/\ninclude resources\noptions\nbackends"}),"\n",(0,a.jsx)(n.h2,{id:"libjson",children:"lib.json"}),"\n",(0,a.jsx)(n.p,{children:"This is where the library configurations live, from the config that gets duplicated by default to the projects dependencies\nto the configurations for the different options set by the author"}),"\n",(0,a.jsx)(n.p,{children:"we will use imgui as an example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "dependencyConfig": {\n    "name": "imgui",\n    "libPath": "external/imgui",\n    "version": "1.92.2",\n    "options": {\n      "backends": ["glfw", "opengl"]\n    }\n  },\n  "libraryOptions": {\n    "backends": [\n      {\n        "option": "glfw",\n        "from": "options/backends/GLFW",\n        "to": "include/backends"\n      },\n      {\n        "option": "vulkan",\n        "from": "options/backends/Vulkan",\n        "to": "include/backends"\n      },\n      {\n        "option": "webgpu",\n        "from": "options/backends/WebGPU",\n        "to": "include/backends"\n      },\n      {\n        "option": "dx12",\n        "from": "options/backends/DX12",\n        "to": "include/backends"\n      },\n      {\n        "option": "opengl",\n        "from": "options/backends/OpenGL3",\n        "to": "include/backends"\n      },\n      {\n        "option": "sdl",\n        "from": "options/backends/SDL3",\n        "to": "include/backends"\n      }\n    ]\n  }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);