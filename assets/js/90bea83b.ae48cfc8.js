"use strict";(self.webpackChunkcodeframe_docs=self.webpackChunkcodeframe_docs||[]).push([[6575],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var s=r(96540);const i={},t=s.createContext(i);function c(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(t.Provider,{value:n},e.children)}},52892:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"config/config","title":".codeframe","description":"The main config file or rather the .codeframe file is found inside the project root directory.","source":"@site/docs/config/config.md","sourceDirName":"config","slug":"/config/","permalink":"/docs/config/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/config/config.md","tags":[],"version":"current","frontMatter":{"title":".codeframe"},"sidebar":"tutorialSidebar","previous":{"title":"schematics (Coming Soon)","permalink":"/docs/commands/schematics"},"next":{"title":"scripts","permalink":"/docs/config/scripts"}}');var i=r(74848),t=r(28453);const c={title:".codeframe"},o=void 0,d={},a=[{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The main config file or rather the ",(0,i.jsx)(n.code,{children:".codeframe"})," file is found inside the project root directory.",(0,i.jsx)(n.br,{}),"\n","This file includes the following configurations:"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"projectName"}),":",(0,i.jsx)(n.br,{}),"\n","Specify a name for your project"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"appEntry"}),":",(0,i.jsx)(n.br,{}),"\n","Relative path to the ",(0,i.jsx)(n.code,{children:"main"})," project file"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"buildDir"}),":",(0,i.jsx)(n.br,{}),"\n","Relative path to where the .exe file should be generated"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"libsDir"}),":",(0,i.jsx)(n.br,{}),"\n","Relative path to where all the libraries are dropped\nstructure has too look like the following"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"projectPreset"}),":",(0,i.jsx)(n.br,{}),"\n","Defines your project\u2019s language, toolchain, and key build settings,",(0,i.jsx)(n.br,{}),"\n","letting CodeFrame auto-configure and manage your project for you.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"./projectPreset",children:"Config -> projectPreset ->"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"scripts"}),":",(0,i.jsx)(n.br,{}),"\n","Define your own command combos in the scripts configuration",(0,i.jsx)(n.br,{}),"\n","and call them with ",(0,i.jsx)(n.code,{children:"cf run <scriptName>"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"./scripts",children:"Config -> scripts ->"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dependencies"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type: Array<{ name: String; includeDir: String; libraryPath: String }>;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"./dependencies",children:"Config -> dependencies ->"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"systemLibs"}),":",(0,i.jsx)(n.br,{}),"\n","To extend your project build to link to custom system libraries that are not included by default.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"./systemLibs",children:"Config -> systemLibs ->"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"bundle"}),":",(0,i.jsx)(n.br,{}),"\n","Conveniently bundles everything specified in the configuration inside a bundle folder in the build directory",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"./bundle",children:"Config -> bundle ->"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"custom"}),":",(0,i.jsx)(n.br,{}),"\n","Intended for adding project-specific flags to the build process.",(0,i.jsx)(n.br,{}),"\n","Use only as a last resort!",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"./custom",children:"Config -> custom ->"})]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title=".codeframe"',children:'{\n  "projectName": "appName",\n  "appEntry": "src/main.cpp",\n  "buildDir": "build",\n  "libsDir": "libs",\n  "scripts": {\n    "start": "./build/default/appName.exe",\n    "build": "codeframe build",\n    "build:release": "codeframe build -m=release",\n    "clear": "clear:build",\n    "clear:build": "rm -rf build && mkdir build"\n  },\n  "dependencies": [\n    {\n      "name": "CodeFrame",\n      "includePath": "codeframe",\n      "libPath": "codeframe",\n      "custom": true\n    }\n  ],\n  "bundle": {\n    "bundlePath": "build/bundle",\n    "resources": [\n      {\n        "from": "./build/release/appName.exe",\n        "to": "./bin/appName.exe"\n      }\n    ]\n  },\n  "document": {\n    "docsPath": "docs"\n  },\n  "projectPreset": {\n    "type": "cpp",\n    "details": {\n      "compiler": "clang",\n      "cppVersion": "c++23",\n      "cVersion": "c23"\n    }\n  },\n  "systemLibs": []\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);