"use strict";(self.webpackChunkcodeframe_docs=self.webpackChunkcodeframe_docs||[]).push([[3281],{6277:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"language-references/asm/registers","title":"registers","description":"x86-64 Registers You Can Use in NASM (User-mode)","source":"@site/docs/language-references/asm/registers.md","sourceDirName":"language-references/asm","slug":"/language-references/asm/registers","permalink":"/docs/language-references/asm/registers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language-references/asm/registers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ASM","permalink":"/docs/language-references/asm/"}}');var i=n(4848),l=n(8453);const d={},c=void 0,t={},o=[{value:"x86-64 Registers You Can Use in NASM (User-mode)",id:"x86-64-registers-you-can-use-in-nasm-user-mode",level:2},{value:"General-Purpose (GPRs)",id:"general-purpose-gprs",level:3},{value:"Instruction Pointer &amp; Flags",id:"instruction-pointer--flags",level:3},{value:"Segment Registers (rare in user-mode)",id:"segment-registers-rare-in-user-mode",level:3},{value:"SIMD / Vector (baseline x86-64 has SSE2)",id:"simd--vector-baseline-x86-64-has-sse2",level:3},{value:"Legacy (usually avoid)",id:"legacy-usually-avoid",level:3},{value:"Call-preserved vs Call-clobbered (handy when mixing C/asm)",id:"call-preserved-vs-call-clobbered-handy-when-mixing-casm",level:2},{value:"Windows x64 (MS ABI)",id:"windows-x64-ms-abi",level:3},{value:"System V AMD64 (Linux/macOS)",id:"system-v-amd64-linuxmacos",level:3},{value:"NASM notes",id:"nasm-notes",level:2}];function a(e){const s={blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"x86-64-registers-you-can-use-in-nasm-user-mode",children:"x86-64 Registers You Can Use in NASM (User-mode)"}),"\n",(0,i.jsx)(s.h3,{id:"general-purpose-gprs",children:"General-Purpose (GPRs)"}),"\n",(0,i.jsx)(s.p,{children:"64-bit \u2192 32-bit \u2192 16-bit \u2192 8-bit"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RAX"})," \u2192 EAX \u2192 AX \u2192 ",(0,i.jsx)(s.strong,{children:"AH/AL"})," ",(0,i.jsx)(s.em,{children:"(avoid AH in 64-bit; see note)"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RBX"})," \u2192 EBX \u2192 BX \u2192 ",(0,i.jsx)(s.strong,{children:"BH/BL"})," ",(0,i.jsx)(s.em,{children:"(avoid BH in 64-bit)"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RCX"})," \u2192 ECX \u2192 CX \u2192 ",(0,i.jsx)(s.strong,{children:"CH/CL"})," ",(0,i.jsx)(s.em,{children:"(avoid CH in 64-bit)"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RDX"})," \u2192 EDX \u2192 DX \u2192 ",(0,i.jsx)(s.strong,{children:"DH/DL"})," ",(0,i.jsx)(s.em,{children:"(avoid DH in 64-bit)"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RSI"})," \u2192 ESI \u2192 SI \u2192 ",(0,i.jsx)(s.strong,{children:"SIL"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RDI"})," \u2192 EDI \u2192 DI \u2192 ",(0,i.jsx)(s.strong,{children:"DIL"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RBP"})," \u2192 EBP \u2192 BP \u2192 ",(0,i.jsx)(s.strong,{children:"BPL"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RSP"})," \u2192 ESP \u2192 SP \u2192 ",(0,i.jsx)(s.strong,{children:"SPL"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"R8\u2013R15"})," \u2192 R8D\u2013R15D \u2192 R8W\u2013R15W \u2192 ",(0,i.jsx)(s.strong,{children:"R8B\u2013R15B"})]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"AH/BH/CH/DH caveat:"})," in x86-64, whenever an instruction uses a REX prefix (most 64-bit forms), the high-byte regs ",(0,i.jsx)(s.strong,{children:"AH/BH/CH/DH can\u2019t be used"}),". Prefer ",(0,i.jsx)(s.code,{children:"AL/BL/CL/DL"})," or ",(0,i.jsx)(s.code,{children:"R8B\u2013R15B"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"instruction-pointer--flags",children:"Instruction Pointer & Flags"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RIP"})," \u2014 64-bit instruction pointer (read via RIP-relative addressing, not directly writable)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RFLAGS"}),"/",(0,i.jsx)(s.strong,{children:"EFLAGS"})," \u2014 status/controls (common flags: ",(0,i.jsx)(s.strong,{children:"CF, PF, AF, ZF, SF, OF, DF, IF"}),")."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"segment-registers-rare-in-user-mode",children:"Segment Registers (rare in user-mode)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CS, DS, ES, SS, FS, GS"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["In 64-bit user code, ",(0,i.jsx)(s.strong,{children:"FS/GS"})," are the only ones you might touch indirectly (e.g., TLS via ",(0,i.jsx)(s.code,{children:"fs:"}),"/",(0,i.jsx)(s.code,{children:"gs:"}),"). Others are effectively fixed."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"simd--vector-baseline-x86-64-has-sse2",children:"SIMD / Vector (baseline x86-64 has SSE2)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"XMM0\u2013XMM15"})," \u2014 128-bit (SSE/SSE2/\u2026)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"YMM0\u2013YMM15"})," \u2014 256-bit (AVX/AVX2)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"ZMM0\u2013ZMM31"})," & ",(0,i.jsx)(s.strong,{children:"K0\u2013K7"})," \u2014 512-bit + masks (AVX-512). ",(0,i.jsx)(s.em,{children:"(Only if the CPU/OS enables them.)"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"MXCSR"})," \u2014 SSE control/status (use ",(0,i.jsx)(s.code,{children:"ldmxcsr/stmxcsr"}),")."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"legacy-usually-avoid",children:"Legacy (usually avoid)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"x87 FPU"}),": ",(0,i.jsx)(s.code,{children:"ST(0)\u2013ST(7)"})," (use SSE2+ instead)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"MMX"}),": ",(0,i.jsx)(s.code,{children:"MM0\u2013MM7"})," (obsolete with SSE2)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Control/Debug"}),": ",(0,i.jsx)(s.code,{children:"CR0\u2013CR8"}),", ",(0,i.jsx)(s.code,{children:"DR0\u2013DR7"})," (privileged; not for user-mode)."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"call-preserved-vs-call-clobbered-handy-when-mixing-casm",children:"Call-preserved vs Call-clobbered (handy when mixing C/asm)"}),"\n",(0,i.jsx)(s.h3,{id:"windows-x64-ms-abi",children:"Windows x64 (MS ABI)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Args"}),": RCX, RDX, R8, R9 (then stack)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Caller-saved (clobbered)"}),": RAX, RCX, RDX, R8\u2013R11, XMM0\u2013XMM5."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Callee-saved (preserved)"}),": RBX, RBP, RSI, RDI, R12\u2013R15, XMM6\u2013XMM15."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Stack"}),": 32-byte shadow space; 16-byte alignment at each ",(0,i.jsx)(s.code,{children:"call"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"system-v-amd64-linuxmacos",children:"System V AMD64 (Linux/macOS)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Args"}),": RDI, RSI, RDX, RCX, R8, R9 (then stack); FP args in XMM0\u2013XMM7."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Caller-saved"}),": RAX, RCX, RDX, RSI, RDI, R8\u2013R11, XMM0\u2013XMM15."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Callee-saved"}),": RBX, RBP, R12\u2013R15; (RSP always preserved)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Stack"}),": keep 16-byte alignment at call sites."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"nasm-notes",children:"NASM notes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Register name \u21d2 size (no suffixes needed): ",(0,i.jsx)(s.code,{children:"mov eax, 1"})," (32-bit), ",(0,i.jsx)(s.code,{children:"mov rax, 1"})," (64-bit)."]}),"\n",(0,i.jsxs)(s.li,{children:["Memory sizes use keywords: ",(0,i.jsx)(s.code,{children:"byte"}),", ",(0,i.jsx)(s.code,{children:"word"}),", ",(0,i.jsx)(s.code,{children:"dword"}),", ",(0,i.jsx)(s.code,{children:"qword"})," (e.g., ",(0,i.jsx)(s.code,{children:"mov byte [rdi], al"}),")."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>c});var r=n(6540);const i={},l=r.createContext(i);function d(e){const s=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(l.Provider,{value:s},e.children)}}}]);