"use strict";(self.webpackChunkcodeframe_docs=self.webpackChunkcodeframe_docs||[]).push([[206],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(96540);const r={},c=i.createContext(r);function l(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(c.Provider,{value:n},e.children)}},76252:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"language-references/cpp/cpp","title":"C++","description":"\ud83d\udcda C++ Standard Library Headers","source":"@site/docs/language-references/cpp/cpp.md","sourceDirName":"language-references/cpp","slug":"/language-references/cpp/","permalink":"/docs/language-references/cpp/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/language-references/cpp/cpp.md","tags":[],"version":"current","frontMatter":{"title":"C++"},"sidebar":"tutorialSidebar","previous":{"title":"language-references","permalink":"/docs/language-references/"},"next":{"title":"Numbers & Math","permalink":"/docs/category/numbers--math"}}');var r=s(74848),c=s(28453);const l={title:"C++"},d=void 0,t={},o=[{value:"\ud83d\udcda C++ Standard Library Headers",id:"-c-standard-library-headers",level:2},{value:"\ud83d\udd22 Numbers &amp; Math",id:"-numbers--math",level:3},{value:"\u270d\ufe0f Strings &amp; Text",id:"\ufe0f-strings--text",level:3},{value:"\ud83d\udce6 Containers",id:"-containers",level:3},{value:"\ud83d\udcc2 Input / Output",id:"-input--output",level:3},{value:"\ud83d\udd27 Utilities",id:"-utilities",level:3},{value:"\ud83e\uddf5 Memory Management",id:"-memory-management",level:3},{value:"\u26a1 Error Handling &amp; Debugging",id:"-error-handling--debugging",level:3},{value:"\ud83d\udd04 Iterators &amp; Ranges",id:"-iterators--ranges",level:3},{value:"\u2699\ufe0f Algorithms &amp; Execution",id:"\ufe0f-algorithms--execution",level:3},{value:"\ud83c\udf0d Localization",id:"-localization",level:3},{value:"\ud83d\udcc1 Filesystem",id:"-filesystem",level:3},{value:"\ud83d\udd0d Regular Expressions",id:"-regular-expressions",level:3},{value:"\ud83d\udd12 Atomics &amp; Concurrency",id:"-atomics--concurrency",level:3},{value:"\ud83e\uddf5 Threading &amp; Parallelism",id:"-threading--parallelism",level:3},{value:"\ud83e\udde9 Core Concepts &amp; Language Features",id:"-core-concepts--language-features",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-c-standard-library-headers",children:"\ud83d\udcda C++ Standard Library Headers"}),"\n",(0,r.jsx)(n.p,{children:"These are the standard headers defined by ISO C++."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"-numbers--math",children:"\ud83d\udd22 Numbers & Math"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<limits>"})," \u2014 Type properties"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<climits>"})," \u2014 Limits of integer types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cfloat>"})," \u2014 Limits of floating-point types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cstdint>"})," \u2014 Fixed-width integer types (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cinttypes>"})," \u2014 Integer format macros (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<stdfloat>"})," \u2014 Extended floating types (C++23)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<bit>"})," \u2014 Bit manipulation (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cmath>"})," \u2014 Math functions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<numbers>"})," \u2014 Math constants (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<numeric>"})," \u2014 Numeric algorithms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<ratio>"})," \u2014 Compile-time rational arithmetic (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<complex>"})," \u2014 Complex numbers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<valarray>"})," \u2014 Value arrays"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cfenv>"})," \u2014 Floating-point environment (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<random>"})," \u2014 Random numbers (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<linalg>"})," \u2014 Linear algebra (C++26)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-strings--text",children:"\u270d\ufe0f Strings & Text"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<string>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<string_view>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::string_view"})," (C++17)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<charconv>"})," \u2014 ",(0,r.jsx)(n.code,{children:"to_chars"}),", ",(0,r.jsx)(n.code,{children:"from_chars"})," (C++17)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<format>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::format"})," (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cctype>"})," \u2014 Character classification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cstring>"})," \u2014 C-style strings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cwchar>"})," \u2014 Wide strings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cwctype>"})," \u2014 Wide char classification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cuchar>"})," \u2014 UTF conversion (C++11)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-containers",children:"\ud83d\udce6 Containers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<array>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::array"})," (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<vector>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::vector"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<deque>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::deque"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<list>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::list"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<forward_list>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::forward_list"})," (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<map>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::map"}),", ",(0,r.jsx)(n.code,{children:"std::multimap"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<set>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::set"}),", ",(0,r.jsx)(n.code,{children:"std::multiset"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<unordered_map>"})," \u2014 Hash maps (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<unordered_set>"})," \u2014 Hash sets (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<stack>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::stack"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<queue>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::queue"}),", ",(0,r.jsx)(n.code,{children:"std::priority_queue"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<span>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::span"})," view (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<mdspan>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::mdspan"})," (C++23)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<flat_map>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::flat_map"})," (C++23)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<flat_set>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::flat_set"})," (C++23)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-input--output",children:"\ud83d\udcc2 Input / Output"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<iostream>"})," \u2014 Standard streams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<istream>"})," \u2014 Input streams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<ostream>"})," \u2014 Output streams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<ios>"})," \u2014 Stream base classes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<iosfwd>"})," \u2014 Forward declarations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<iomanip>"})," \u2014 I/O manipulators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<fstream>"})," \u2014 File streams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<sstream>"})," \u2014 String streams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<spanstream>"})," \u2014 Span streams (C++23)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<strstream>"})," \u2014 Deprecated old string streams"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cstdio>"})," \u2014 C I/O"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<print>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::print"})," (C++23)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<streambuf>"})," \u2014 Stream buffers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<syncstream>"})," \u2014 Synchronized output streams (C++20)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-utilities",children:"\ud83d\udd27 Utilities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<any>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::any"})," (C++17)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<optional>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::optional"})," (C++17)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<variant>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::variant"})," (C++17)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<expected>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::expected"})," (C++23)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<tuple>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::tuple"})," (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<functional>"})," \u2014 Function objects, bind, invoke"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<bitset>"})," \u2014 Fixed-size bitset"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<source_location>"})," \u2014 Code location info (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<debugging>"})," \u2014 Debugging utilities (C++26)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-memory-management",children:"\ud83e\uddf5 Memory Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<new>"})," \u2014 Low-level memory utilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<memory>"})," \u2014 Smart pointers, allocators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<memory_resource>"})," \u2014 Polymorphic allocators (C++17)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<scoped_allocator>"})," \u2014 Nested allocators (C++11)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-error-handling--debugging",children:"\u26a1 Error Handling & Debugging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cassert>"})," \u2014 Assertions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<cerrno>"})," \u2014 Error codes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<exception>"})," \u2014 Exception handling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<stdexcept>"})," \u2014 Standard exceptions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<system_error>"})," \u2014 Error codes & conditions (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<stacktrace>"})," \u2014 Stacktrace (C++23)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-iterators--ranges",children:"\ud83d\udd04 Iterators & Ranges"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<iterator>"})," \u2014 Iterators"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<ranges>"})," \u2014 Ranges library (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<generator>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::generator"})," (C++23)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-algorithms--execution",children:"\u2699\ufe0f Algorithms & Execution"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<algorithm>"})," \u2014 Sorting, searching, etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<execution>"})," \u2014 Parallel execution policies (C++17)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-localization",children:"\ud83c\udf0d Localization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<locale>"})," \u2014 Localization utilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<clocale>"})," \u2014 C-style locale"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<codecvt>"})," \u2014 Unicode conversion (C++11, deprecated C++17, removed C++26)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<text_encoding>"})," \u2014 Text encodings (C++26)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-filesystem",children:"\ud83d\udcc1 Filesystem"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<filesystem>"})," \u2014 Paths and filesystem operations (C++17)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-regular-expressions",children:"\ud83d\udd0d Regular Expressions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<regex>"})," \u2014 Regex library (C++11)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-atomics--concurrency",children:"\ud83d\udd12 Atomics & Concurrency"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<atomic>"})," \u2014 Atomic operations (C++11)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-threading--parallelism",children:"\ud83e\uddf5 Threading & Parallelism"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<thread>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::thread"})," (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<mutex>"})," \u2014 Mutexes (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<shared_mutex>"})," \u2014 Shared mutex (C++14)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<condition_variable>"})," \u2014 Thread waiting (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<future>"})," \u2014 Async computations (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<stop_token>"})," \u2014 Stop tokens (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<barrier>"})," \u2014 Barriers (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<latch>"})," \u2014 Latches (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<semaphore>"})," \u2014 Semaphores (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<hazard_pointer>"})," \u2014 Hazard pointers (C++26)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<rcu>"})," \u2014 Read-copy-update (C++26)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-core-concepts--language-features",children:"\ud83e\udde9 Core Concepts & Language Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<concepts>"})," \u2014 Fundamental concepts (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<coroutine>"})," \u2014 Coroutine support (C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<compare>"})," \u2014 Three-way comparison (",(0,r.jsx)(n.code,{children:"<=>"}),", C++20)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<type_traits>"})," \u2014 Compile-time type information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<typeinfo>"})," \u2014 Runtime type information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<typeindex>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::type_index"})," (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<utility>"})," \u2014 Utility components (",(0,r.jsx)(n.code,{children:"move"}),", ",(0,r.jsx)(n.code,{children:"swap"}),", etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<initializer_list>"})," \u2014 ",(0,r.jsx)(n.code,{children:"std::initializer_list"})," (C++11)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<version>"})," \u2014 Implementation-dependent library info (C++20)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);