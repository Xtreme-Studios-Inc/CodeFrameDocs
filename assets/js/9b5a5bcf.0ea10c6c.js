"use strict";(self.webpackChunkcodeframe_docs=self.webpackChunkcodeframe_docs||[]).push([[1454],{7783:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"guides/Debug","title":"Debug Guide","description":"Debugging in CodeFrame is simple and seamlessly integrates with VSCode.","source":"@site/docs/guides/Debug.md","sourceDirName":"guides","slug":"/guides/Debug","permalink":"/docs/guides/Debug","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/Debug.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docs/guides/Configuration"},"next":{"title":"Libraries","permalink":"/docs/guides/Libraries"}}');var t=s(74848),r=s(28453);const d={},o="Debug Guide",l={},a=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Workflow",id:"workflow",level:2},{value:"1. Add Breakpoints",id:"1-add-breakpoints",level:3},{value:"2. Open the Debug Panel",id:"2-open-the-debug-panel",level:3},{value:"3. Start Debugging",id:"3-start-debugging",level:3},{value:"Notes",id:"notes",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"debug-guide",children:"Debug Guide"})}),"\n",(0,t.jsxs)(n.p,{children:["Debugging in ",(0,t.jsx)(n.strong,{children:"CodeFrame"})," is simple and seamlessly integrates with ",(0,t.jsx)(n.strong,{children:"VSCode"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://code.visualstudio.com/",children:"VSCode"})," installed"]}),"\n",(0,t.jsxs)(n.li,{children:["New project created with ",(0,t.jsx)(n.code,{children:"cf new"})," and opened in VSCode"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"workflow",children:"Workflow"}),"\n",(0,t.jsx)(n.h3,{id:"1-add-breakpoints",children:"1. Add Breakpoints"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Open your project in ",(0,t.jsx)(n.strong,{children:"VSCode"})]}),"\n",(0,t.jsx)(n.li,{children:"Navigate to the file you want to debug"}),"\n",(0,t.jsxs)(n.li,{children:["Add breakpoints by clicking in the left margin or pressing ",(0,t.jsx)(n.code,{children:"F9"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-open-the-debug-panel",children:"2. Open the Debug Panel"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["In VSCode, click the ",(0,t.jsx)(n.strong,{children:"Run and Debug"})," activity bar item on the left sidebar"]}),"\n",(0,t.jsxs)(n.li,{children:["You should see a preconfigured ",(0,t.jsx)(n.strong,{children:"Debug Launch"})," task (automatically created by CodeFrame when generating a project)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-start-debugging",children:"3. Start Debugging"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Select the ",(0,t.jsx)(n.strong,{children:"Debug Launch"})," task"]}),"\n",(0,t.jsxs)(n.li,{children:["Press the ",(0,t.jsx)(n.strong,{children:"Start Debugging"})," button (\u25b6) or simply hit ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"F5"})})]}),"\n",(0,t.jsx)(n.li,{children:"Your program will start with LLDB attached, and execution will pause at your breakpoints"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["CodeFrame\u2019s debug setup is ",(0,t.jsx)(n.strong,{children:"pre-integrated"}),"\u2014no extra configuration required"]}),"\n",(0,t.jsx)(n.li,{children:"All standard VSCode debugging tools (watch, step into, step over, variables, call stack, etc.) work out of the box"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"\ud83d\udc49 That\u2019s it. CodeFrame takes care of the setup so you can focus on debugging."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>o});var i=s(96540);const t={},r=i.createContext(t);function d(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);