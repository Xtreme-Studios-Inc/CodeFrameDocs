"use strict";(self.webpackChunkcodeframe_docs=self.webpackChunkcodeframe_docs||[]).push([[6582],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var r=i(96540);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},57466:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"config/systemLibs","title":"systemLibs","description":"Lets you specify extra system libraries to link with your project\u2014useful for dependencies that aren\u2019t included by default.","source":"@site/docs/config/systemLibs.md","sourceDirName":"config","slug":"/config/systemLibs","permalink":"/docs/config/systemLibs","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/config/systemLibs.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"projectPreset","permalink":"/docs/config/projectPreset"},"next":{"title":"Package Manager","permalink":"/docs/package-manager/overview"}}');var t=i(74848),o=i(28453);const s={},a=void 0,d={},l=[{value:"Windows",id:"windows",level:3},{value:"COMMING SOON:",id:"comming-soon",level:2},{value:"Linux",id:"linux",level:3},{value:"Mac",id:"mac",level:3}];function c(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Lets you specify extra system libraries to link with your project\u2014useful for dependencies that aren\u2019t included by default."}),"\n",(0,t.jsx)(n.p,{children:"You only need to add system libraries here if they aren\u2019t already covered by CodeFrame\u2019s default set."}),"\n",(0,t.jsxs)(n.p,{children:["By Default Included For Windows Builds\nCodeFrame automatically links these libraries on Windows,",(0,t.jsx)(n.br,{}),"\n","no need to add them manually:"]}),"\n",(0,t.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Windows Default"',children:'{\n  "systemLibs": [\n    "stdc++", // Standard C++ library\n    "kernel32", // Windows kernel core API\n    "user32", // User interface (windowing, messages, input)\n    "ws2_32", // Windows Sockets (networking)\n    "gdi32", // Graphics Device Interface (drawing, fonts)\n    "shell32", // Windows Shell API (file operations, dialogs)\n    "ole32", // Object Linking and Embedding (COM support)\n    "pthread", // POSIX threads (if present/needed)\n    "oleaut32", // OLE Automation\n    "uuid", // UUID library (COM GUIDs)\n    "advapi32" // Advanced Windows API (registry, security)\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Not included by default, include if needed in your ",(0,t.jsx)(n.code,{children:".codeframe"})," config:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Windows"',children:'{\n  "systemLibs": [\n    "comdlg32",\n    "winmm",\n    "msvcrt",\n    "comctl32",\n    "imm32",\n    "version",\n    "iphlpapi",\n    "dwrite",\n    "d3d11",\n    "d3d12",\n    "dxguid",\n    "dsound",\n    "xaudio2",\n    "mfplat",\n    "mfreadwrite",\n    "wininet",\n    "winhttp",\n    "mswsock",\n    "dnsapi",\n    "ntdll",\n    "comsuppw",\n    "setupapi",\n    "cfgmgr32",\n    "pdh",\n    "profapi"\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"comming-soon",children:"COMMING SOON:"}),"\n",(0,t.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Linux Default"',children:'{\n  "systemLibs": [\n    "stdc++", // Standard C++ library\n    "c", // Standard C library (libc.so, almost always linked implicitly)\n    "pthread" // POSIX threads\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Not included by default, include if needed in your ",(0,t.jsx)(n.code,{children:".codeframe"})," config:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Linux"',children:'{\n  "systemLibs": [\n    "m", // Math library, often linked automatically (libm.so)\n    "dl", // Dynamic loading (libdl.so), needed for dlopen/dlsym\n    "rt", // Realtime extensions (librt.so), needed for timer APIs, etc.\n    "X11", // X11 windowing system (libX11.so)\n    "Xext", // X11 extensions\n    "Xrandr", // X11 RandR\n    "GL", // OpenGL\n    "gtk-3", // GTK3 GUI\n    "gdk-3", // GDK\n    "wayland-client",\n    "wayland-server", // Modern display servers\n    "vulkan", // Vulkan\n    "asound", // ALSA audio\n    "pulse", // PulseAudio\n    "jack", // JACK audio\n    "pipewire-0.3", // PipeWire\n    "udev", // Device management\n    "ssl", // OpenSSL\n    "crypto", // OpenSSL crypto\n    "gnome-keyring", // Desktop keyring\n    "secret", // Modern secret storage\n    "dbus-1", // D-Bus IPC\n    "unwind", // Stack unwinding/debugging\n    "bfd", // Debugging/binary file\n    "dw", // DWARF debug info\n    "resolv", // DNS\n    "nsl", // Legacy network services\n    "curl", // libcurl\n    "systemd" // systemd\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"mac",children:"Mac"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Mac Default"',children:'{\n  "systemLibs": [\n    "c++", // Standard C++ library (libc++.dylib/libstdc++.dylib)\n    "System", // Core system (libSystem.dylib includes libc, pthread, etc.)\n    "CoreFoundation.framework", // Base Mac OS API (CF types, string, file, URL, etc)\n    "Foundation.framework" // Base Objective-C and Swift API (NSObject, collections, etc.)\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Not included by default, include if needed in your ",(0,t.jsx)(n.code,{children:".codeframe"})," config:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="Mac"',children:'{\n  "systemLibs": [\n    "AppKit.framework", // GUI windows and events (needed for GUI apps)\n    "CoreGraphics.framework", // 2D graphics\n    "QuartzCore.framework", // Core Animation\n    "OpenGL.framework", // OpenGL\n    "Metal.framework", // Metal GPU API\n    "MetalKit.framework", // Metal utilities\n    "CoreAudio.framework", // Audio\n    "AudioToolbox.framework", // Audio\n    "AVFoundation.framework", // Media playback/record\n    "CoreMedia.framework", // Multimedia timing\n    "CoreVideo.framework", // Video\n    "AVKit.framework", // Video playback UI\n    "IOKit.framework", // Device and hardware interface\n    "CoreServices.framework", // Versioning, file system\n    "Security.framework", // Security, keychain, crypto\n    "CryptoTokenKit.framework", // Crypto tokens\n    "SecurityFoundation.framework", // Higher-level security\n    "libobjc.A.dylib", // Objective-C runtime (needed for ObjC)\n    "libunwind.dylib", // Debugging/profiling (auto-linked)\n    "Instruments.framework", // Profiling (Xcode/Dev only)\n    "CFNetwork.framework", // Core Foundation networking\n    "SystemConfiguration.framework", // Network config\n    "libresolv.dylib", // DNS resolution\n    "Network.framework", // Modern network API\n    "CoreWLAN.framework", // WiFi\n    "CoreBluetooth.framework", // Bluetooth\n    "OpenCL.framework", // GPU compute\n    "Speech.framework" // Speech\n  ]\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);